
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/*
&mt {
    tapping-term-ms = <100>;
};
*/


/ {
    macros {
        /****** for MAC ******/
        ZMK_MACRO(MAC_DLINE,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp BSPC>
                , <&macro_release &kp LALT>
                ;
        )
        ZMK_MACRO(MAC_PRVWD,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LALT>
                ;
        )
        ZMK_MACRO(MAC_NXTWD,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LALT>
                ;
        )
        ZMK_MACRO(MAC_FRTLT,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LGUI>
                ;
        )
        ZMK_MACRO(MAC_LSTLT,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LGUI>
                ;
        )

        /****** for WIN ******/
        ZMK_MACRO(WIN_DLINE,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp BSPC>
                , <&macro_release &kp LCTRL>
                ;
        )
        ZMK_MACRO(WIN_PRVWD,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LCTRL>
                ;
        )
        ZMK_MACRO(WIN_NXTWD,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LCTRL>
                ;
        )
        ZMK_MACRO(WIN_FRTLT,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp HOME>
                , <&macro_release &kp LCTRL>
                ;
        )
        ZMK_MACRO(WIN_LSTLT,
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp END>
                , <&macro_release &kp LCTRL>
                ;
        )
    };


    // conditional_layers {
    //     compatible = "zmk,conditional-layers";
    //     tri_layer {
    //         if-layers = <6 4>;
    //         then-layer = <7>;
    //     };

    //     tri_layer_2 {
    //         if-layers = <6 5>;
    //         then-layer = <7>;
    //     };
    // };

    combos {
        compatible = "zmk,combos";
        combo_clearBT {
            timeout-ms = <135>;
            key-positions = <0 5>;
            bindings = <&bt BT_CLR>;
        };
        combo_BT1 {
            timeout-ms = <135>;
            key-positions = <0 1>;
            bindings = <&bt BT_SEL 0>;
        };
        combo_BT2 {
            timeout-ms = <135>;
            key-positions = <0 2>;
            bindings = <&bt BT_SEL 1>;
        };
        combo_BT3 {
            timeout-ms = <135>;
            key-positions = <0 3>;
            bindings = <&bt BT_SEL 2>;
        };
        combo_BT4 {
            timeout-ms = <135>;
            key-positions = <0 4>;
            bindings = <&bt BT_SEL 3>;
        };


        combo_MacQwer {
            timeout-ms = <135>;
            key-positions = <0 14>;
            bindings = <&tog 1>;
            layers = <0>;
        };
        combo_WinColm {
            timeout-ms = <135>;
            key-positions = <0 15>;
            bindings = <&tog 2>;
            layers = <0>;
        };
        combo_WinQwer {
            timeout-ms = <135>;
            key-positions = <0 16>;
            bindings = <&tog 3>;
            layers = <0>;
        };
        combo_OutUSB {
            timeout-ms = <135>;
            key-positions = <0 26>;
            bindings = <&out OUT_USB>;
            layers = <0>;
        };
        combo_OutBLE {
            timeout-ms = <135>;
            key-positions = <0 27>;
            bindings = <&out OUT_BLE>;
            layers = <0>;
        };


        combo_Check1 {
            layers = <0>;
            timeout-ms = <135>;
            key-positions = <56 57>;
            bindings = <&kp N1>;
        };
        combo_Check2 {
            layers = <1>;
            timeout-ms = <135>;
            key-positions = <56 57>;
            bindings = <&kp N2>;
        };
        combo_Check3 {
            layers = <2>;
            timeout-ms = <135>;
            key-positions = <56 57>;
            bindings = <&kp N3>;
        };
        combo_Check4 {
            layers = <3>;
            timeout-ms = <135>;
            key-positions = <56 57>;
            bindings = <&kp N4>;
        };
    };


    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };



    keymap {
        compatible = "zmk,keymap";

/******* BASE LAYER -- MAC ********/
        MAC_COLEMAK_DH_0 {
            bindings = < 
&kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                  &kp N6      &kp N7      &kp N8      &kp N9          &kp N0          &MAC_DLINE
&kp ESC     &kp Q       &kp W       &kp F       &kp P       &kp B                   &kp J       &kp L       &kp U       &kp Y           &kp SEMI        &kp BSPC
&kp TAB     &kp A       &kp R       &kp S       &kp T       &kp G                   &kp M       &kp N       &kp E       &kp I           &kp O           &kp SQT
&kp LSHFT   &kp Z       &kp X       &kp C       &kp D       &kp V                   &kp K       &kp H       &kp COMMA   &kp DOT         &kp FSLH        &kp RSHFT
            &kp LCTRL   &kp LALT    &kp LGUI    &mo 3       &kp SPACE               &kp RET     &mo 5       &kp CLCK    &kp C_VOL_DN    &kp C_VOL_UP
            >;
        };


/******* BASE LAYER -- WIN ********/
        WIN_COLEMAK_DH_1 {
            bindings = <
&kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                  &kp N6      &kp N7      &kp N8      &kp N9          &kp N0          &WIN_DLINE
&kp ESC     &kp Q       &kp W       &kp F       &kp P       &kp B                   &kp J       &kp L       &kp U       &kp Y           &kp SEMI        &kp BSPC
&kp TAB     &kp A       &kp R       &kp S       &kp T       &kp G                   &kp M       &kp N       &kp E       &kp I           &kp O           &kp SQT
&kp LSHFT   &kp Z       &kp X       &kp C       &kp D       &kp V                   &kp K       &kp H       &kp COMMA   &kp DOT         &kp FSLH        &kp RSHFT
            &kp LGUI    &kp LALT    &kp LCTRL   &mo 4       &kp SPACE               &kp RET     &mo 5       &kp CLCK    &kp C_VOL_DN    &kp C_VOL_UP
            >;
        };
        WIN_QWERTY_2 {
            bindings = <
&kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                  &kp N6      &kp N7      &kp N8      &kp N9          &kp N0          &WIN_DLINE
&kp ESC     &kp Q       &kp W       &kp E       &kp R       &kp T                   &kp Y       &kp U       &kp I       &kp O           &kp P           &kp BSPC
&kp TAB     &kp A       &kp S       &kp D       &kp F       &kp G                   &kp H       &kp J       &kp K       &kp L           &kp SEMI        &kp SQT
&kp LSHFT   &kp Z       &kp X       &kp C       &kp V       &kp B                   &kp N       &kp M       &kp COMMA   &kp DOT         &kp FSLH        &kp RSHFT
            &kp LGUI    &kp LALT    &kp LCTRL   &mo 4       &kp SPACE               &kp RET     &mo 5       &kp CLCK    &kp C_VOL_DN    &kp C_VOL_UP
            >;
        };

/****** MACRO LAYER ******/
        MAC_PUNC_NAV_3 {
            bindings = <
&kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6              &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12               
&trans      &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT    &kp BSLH            &kp PSCRN   &none       &kp UP      &none       &none       &kp DEL
&trans      &kp UNDER   &kp PLUS    &kp LBRC    &kp RBRC    &kp PIPE            &MAC_PRVWD  &kp LEFT    &kp DOWN    &kp RIGHT   &none       &MAC_NXTWD  
&trans      &none       &none       &none       &none       &none               &none       &kp HOME    &kp END     &kp PG_UP   &kp PG_DN   &trans
            &trans      &trans      &trans      &mo 6       &trans              &trans      &trans      &trans      &trans      &trans
            >;
        };

        WIN_PUNC_NAV_4 {
            bindings = <
&kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6              &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12
&trans      &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT    &kp BSLH            &kp PSCRN   &none       &kp UP      &none       &none       &kp DEL
&trans      &kp UNDER   &kp PLUS    &kp LBRC    &kp RBRC    &kp PIPE            &WIN_PRVWD  &kp LEFT    &kp DOWN    &kp RIGHT   &none       &WIN_NXTWD
&trans      &none       &none       &none       &none       &none               &none       &kp HOME    &kp END     &kp PG_UP   &kp PG_DN   &trans
            &trans      &trans      &trans      &mo 6       &trans              &trans      &trans      &trans      &trans      &trans
            >;
        };


/****** SHARE LAYER ******/ 
//         NUM_FN_5 {
//             bindings = <
// &none       &none       &none       &none       &none       &none               &none       &none       &none       &none       &none       &none 
// &trans      &none       &none       &none       &none       &none               &none       &none       &none       &none       &none       &kp DEL
// &trans      &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT    &kp BSLH            &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6
// &trans      &none       &none       &none       &kp TILDE   &kp GRAV            &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12
//             &trans      &trans      &trans      &mo 6       &trans              &trans      &trans      &trans      &trans      &trans
//             >;
//         };
        NUM_FN_5 {
            bindings = <
&none       &none       &none       &none       &none       &none               &none       &none       &none       &none       &none       &none  
&trans      &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT    &kp BSLH            &none       &kp N7      &kp N8      &kp N9      &none       &none
&trans      &kp UNDER   &kp PLUS    &kp LBRC    &kp RBRC    &kp PIPE            &none       &kp N4      &kp N5      &kp N6      &kp N0      &none
&trans      &none       &none       &none       &none       &none               &none       &kp N1      &kp N2      &kp N3      &none       &trans
            &trans      &trans      &trans      &trans      &trans              &trans      &mo 6       &trans      &trans      &trans
            >;
        };


/****** BLUETOOTH LAYER ******/
        BLUETOOTH_6 {
            bindings = <
&none       &none           &none           &none           &none           &none               &none       &none           &none           &none           &none           &none 
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4        &none       &none           &none           &none           &none           &none       
&tog 0      &tog 1          &tog 2          &none           &none           &none               &none       &none           &none           &none           &none           &none
&none       &out OUT_USB    &out OUT_BLE    &none           &none           &none               &none       &none           &none           &none           &none           &none
            &trans          &trans          &trans          &trans          &trans              &trans      &trans          &trans          &trans          &trans
            >;
        };


    };
};
